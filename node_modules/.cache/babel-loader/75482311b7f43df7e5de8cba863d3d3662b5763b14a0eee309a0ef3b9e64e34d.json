{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mo7am\\\\OneDrive\\\\Desktop\\\\AnimeU-main\\\\AnimeU-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { QueryClient, QueryClientProvider, useQuery } from \"@tanstack/react-query\";\nimport { ReactQueryDevtools } from \"@tanstack/react-query-devtools\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Layout from \"./Layout/Layout\";\nimport AnimeContainer from \"./Home/AnimeContainer\";\nimport AnimeDetails from \"./View/AnimeDetails\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\nasync function getData(query) {\n  let res;\n  if (query !== \"\") {\n    res = await fetch(`https://api.jikan.moe/v4/anime?q=${query}&sfw=true`);\n  } else {\n    res = await fetch(`https://api.jikan.moe/v4/anime?q&sfw=true`);\n  }\n  if (!res.ok) {\n    throw new Error(\"Response Was not Okay\");\n  }\n  const data = await res.json();\n  return data;\n}\nconst router = createBrowserRouter([{\n  element: /*#__PURE__*/_jsxDEV(Layout, {\n    query: query,\n    handleSearch: handleSearch,\n    handleSort: handleSort\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this),\n  children: [{\n    index: true,\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(AnimeContainer, {\n      isLoading: isLoading,\n      data: data,\n      handleChoice: handleChoice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, {\n    path: \"AnimeInfo\",\n    element: /*#__PURE__*/_jsxDEV(AnimeDetails, {\n      chosenAnime: chosen,\n      onBack: handleIsBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }, this)\n  }]\n}]);\nexport default function App() {\n  _s();\n  const [chosen, setChosen] = useState({});\n  const [isBack, setIsBack] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  const {\n    isLoading,\n    data\n  } = useQuery({\n    queryKey: [\"animeData\", query],\n    queryFn: () => getData(query)\n  });\n  function handleIsBack() {\n    setIsBack(isBack => !isBack);\n  }\n  function handleSearch(queryValue) {\n    setIsBack(true);\n    setQuery(queryValue);\n  }\n  function handleChoice(chosenAnime) {\n    setChosen(chosenAnime);\n    handleIsBack();\n  }\n  function handleSort(sortType) {\n    var _data$data, _data$data2;\n    setIsBack(true);\n    switch (sortType) {\n      case \"name\":\n        data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.result.slice().sort((a, b) => a.title.localeCompare(b.title));\n        break;\n      case \"epi\":\n        data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.result.slice().sort((a, b) => (a === null || a === void 0 ? void 0 : a.episodes) - (b === null || b === void 0 ? void 0 : b.episodes));\n        break;\n      default:\n        console.log(\"something Went Wrong\");\n    }\n  }\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sTJe/iVVzUHYKq2Ci2CJ+4fhzX0=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["QueryClient","QueryClientProvider","useQuery","ReactQueryDevtools","createBrowserRouter","RouterProvider","Layout","AnimeContainer","AnimeDetails","useState","jsxDEV","_jsxDEV","queryClient","getData","query","res","fetch","ok","Error","data","json","router","element","handleSearch","handleSort","fileName","_jsxFileName","lineNumber","columnNumber","children","index","path","isLoading","handleChoice","chosenAnime","chosen","onBack","handleIsBack","App","_s","setChosen","isBack","setIsBack","setQuery","queryKey","queryFn","queryValue","sortType","_data$data","_data$data2","result","slice","sort","a","b","title","localeCompare","episodes","console","log","client","_c","$RefreshReg$"],"sources":["C:/Users/mo7am/OneDrive/Desktop/AnimeU-main/AnimeU-main/src/App.js"],"sourcesContent":["import {\n  QueryClient,\n  QueryClientProvider,\n  useQuery,\n} from \"@tanstack/react-query\";\nimport { ReactQueryDevtools } from \"@tanstack/react-query-devtools\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Layout from \"./Layout/Layout\";\nimport AnimeContainer from \"./Home/AnimeContainer\";\nimport AnimeDetails from \"./View/AnimeDetails\";\nimport { useState } from \"react\";\n\nconst queryClient = new QueryClient();\n\nasync function getData(query) {\n  let res;\n  if (query !== \"\") {\n    res = await fetch(`https://api.jikan.moe/v4/anime?q=${query}&sfw=true`);\n  } else {\n    res = await fetch(`https://api.jikan.moe/v4/anime?q&sfw=true`);\n  }\n\n  if (!res.ok) {\n    throw new Error(\"Response Was not Okay\");\n  }\n\n  const data = await res.json();\n  return data;\n}\n\nconst router = createBrowserRouter([\n  {\n    element: (\n      <Layout\n        query={query}\n        handleSearch={handleSearch}\n        handleSort={handleSort}\n      />\n    ),\n    children: [\n      {\n        index: true,\n        path: \"/\",\n        element: (\n          <AnimeContainer\n            isLoading={isLoading}\n            data={data}\n            handleChoice={handleChoice}\n          />\n        ),\n      },\n      {\n        path: \"AnimeInfo\",\n        element: <AnimeDetails chosenAnime={chosen} onBack={handleIsBack} />,\n      },\n    ],\n  },\n]);\n\nexport default function App() {\n  const [chosen, setChosen] = useState({});\n  const [isBack, setIsBack] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  const { isLoading, data } = useQuery({\n    queryKey: [\"animeData\", query],\n    queryFn: () => getData(query),\n  });\n  function handleIsBack() {\n    setIsBack((isBack) => !isBack);\n  }\n\n  function handleSearch(queryValue) {\n    setIsBack(true);\n    setQuery(queryValue);\n  }\n\n  function handleChoice(chosenAnime) {\n    setChosen(chosenAnime);\n    handleIsBack();\n  }\n\n  function handleSort(sortType) {\n    setIsBack(true);\n    switch (sortType) {\n      case \"name\":\n        data?.data?.result\n          .slice()\n          .sort((a, b) => a.title.localeCompare(b.title));\n        break;\n      case \"epi\":\n        data?.data?.result.slice().sort((a, b) => a?.episodes - b?.episodes);\n        break;\n      default:\n        console.log(\"something Went Wrong\");\n    }\n  }\n\n  console.log(data);\n  return (\n    <QueryClientProvider client={queryClient}>\n      {/* <ReactQueryDevtools initialIsOpen={false} /> */}\n      <RouterProvider router={router} />\n    </QueryClientProvider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}