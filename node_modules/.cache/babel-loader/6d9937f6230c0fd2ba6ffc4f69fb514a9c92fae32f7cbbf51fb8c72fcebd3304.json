{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mo7am\\\\OneDrive\\\\Desktop\\\\AnimeU-main\\\\AnimeU-main\\\\src\\\\Anime.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./MediaQueries.css\";\nimport Content from \"./features/list/Content\";\nimport AnimeDetails from \"./features/info/AnimeDetails\";\nimport { ControlBar } from \"./features/list/ControlBar\";\nimport Card from \"./features/list/Card\";\nimport useFetch from \"./hooks/useFetch\";\nimport Loader from \"./ui/Loader\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getData(query) {\n  try {\n    let res;\n    if (query !== \"\") {\n      res = await fetch(`https://api.jikan.moe/v4/anime?q=${query}&sfw=true`);\n    } else {\n      res = await fetch(`https://api.jikan.moe/v4/anime?q&sfw=true`);\n    }\n    if (!res.ok) {\n      throw new Error(\"Response Was not Okay\");\n    }\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n}\nexport default function Anime() {\n  _s();\n  var _data$data3;\n  const [chosen, setChosen] = useState({});\n  const [isBack, setIsBack] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  const {\n    isLoading,\n    data\n  } = useQuery({\n    queryKey: [\"animeData\", query],\n    queryFn: () => getData(query)\n    // refetchInterval: 100,\n    // staleTime: 100,\n  });\n\n  function handleIsBack() {\n    setIsBack(isBack => !isBack);\n  }\n  function handleSearch(queryValue) {\n    setIsBack(true);\n    setQuery(queryValue);\n  }\n  function handleChoice(chosenAnime) {\n    setChosen(chosenAnime);\n    handleIsBack();\n  }\n  function handleSort(sortType) {\n    var _data$data, _data$data2;\n    setIsBack(true);\n    switch (sortType) {\n      case \"name\":\n        data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.result.slice().sort((a, b) => a.title.localeCompare(b.title));\n        break;\n      case \"epi\":\n        data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.result.slice().sort((a, b) => (a === null || a === void 0 ? void 0 : a.episodes) - (b === null || b === void 0 ? void 0 : b.episodes));\n        break;\n      default:\n        console.log(\"something Went Wrong\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anime\",\n    children: [/*#__PURE__*/_jsxDEV(ControlBar, {\n      search: query,\n      onSearch: handleSearch,\n      onSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), isBack ? /*#__PURE__*/_jsxDEV(Content, {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this) : data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.map(el => /*#__PURE__*/_jsxDEV(Card, {\n        animeData: el,\n        onChoice: handleChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AnimeDetails, {\n      chosenAnime: chosen,\n      onBack: handleIsBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Anime, \"sTJe/iVVzUHYKq2Ci2CJ+4fhzX0=\", false, function () {\n  return [useQuery];\n});\n_c = Anime;\nvar _c;\n$RefreshReg$(_c, \"Anime\");","map":{"version":3,"names":["useState","Content","AnimeDetails","ControlBar","Card","useFetch","Loader","useQuery","jsxDEV","_jsxDEV","getData","query","res","fetch","ok","Error","data","json","err","Anime","_s","_data$data3","chosen","setChosen","isBack","setIsBack","setQuery","isLoading","queryKey","queryFn","handleIsBack","handleSearch","queryValue","handleChoice","chosenAnime","handleSort","sortType","_data$data","_data$data2","result","slice","sort","a","b","title","localeCompare","episodes","console","log","className","children","search","onSearch","onSort","fileName","_jsxFileName","lineNumber","columnNumber","map","el","animeData","onChoice","onBack","_c","$RefreshReg$"],"sources":["C:/Users/mo7am/OneDrive/Desktop/AnimeU-main/AnimeU-main/src/Anime.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./MediaQueries.css\";\nimport Content from \"./features/list/Content\";\nimport AnimeDetails from \"./features/info/AnimeDetails\";\nimport { ControlBar } from \"./features/list/ControlBar\";\nimport Card from \"./features/list/Card\";\nimport useFetch from \"./hooks/useFetch\";\nimport Loader from \"./ui/Loader\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nasync function getData(query) {\n  try {\n    let res;\n    if (query !== \"\") {\n      res = await fetch(`https://api.jikan.moe/v4/anime?q=${query}&sfw=true`);\n    } else {\n      res = await fetch(`https://api.jikan.moe/v4/anime?q&sfw=true`);\n    }\n\n    if (!res.ok) {\n      throw new Error(\"Response Was not Okay\");\n    }\n\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n}\n\nexport default function Anime() {\n  const [chosen, setChosen] = useState({});\n  const [isBack, setIsBack] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  const { isLoading, data } = useQuery({\n    queryKey: [\"animeData\", query],\n    queryFn: () => getData(query),\n    // refetchInterval: 100,\n    // staleTime: 100,\n  });\n\n  function handleIsBack() {\n    setIsBack((isBack) => !isBack);\n  }\n\n  function handleSearch(queryValue) {\n    setIsBack(true);\n    setQuery(queryValue);\n  }\n\n  function handleChoice(chosenAnime) {\n    setChosen(chosenAnime);\n    handleIsBack();\n  }\n\n  function handleSort(sortType) {\n    setIsBack(true);\n    switch (sortType) {\n      case \"name\":\n        data?.data?.result\n          .slice()\n          .sort((a, b) => a.title.localeCompare(b.title));\n        break;\n      case \"epi\":\n        data?.data?.result.slice().sort((a, b) => a?.episodes - b?.episodes);\n        break;\n      default:\n        console.log(\"something Went Wrong\");\n    }\n  }\n\n  return (\n    <div className=\"anime\">\n      <ControlBar search={query} onSearch={handleSearch} onSort={handleSort} />\n      {isBack ? (\n        <Content>\n          {isLoading ? (\n            <Loader />\n          ) : (\n            data?.data?.map((el) => (\n              <Card animeData={el} onChoice={handleChoice} />\n            ))\n          )}\n        </Content>\n      ) : (\n        <AnimeDetails chosenAnime={chosen} onBack={handleIsBack} />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}